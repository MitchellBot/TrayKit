<UserControl x:Class="TrayKit.Controls.PluginSettingsEditor"
             x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TrayKit.Controls"
             xmlns:models="clr-namespace:TrayKit.Models"
             xmlns:modelsSettings="clr-namespace:TrayKit.Models.Settings"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=mscorlib"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" >
  <UserControl.Resources>
    <local:TypeOfConverter x:Key="TypeOfConverter" />
    <local:DebugDataBindingConverter x:Key="DebugBinding" />
    <!--TODO: Might want to move the Style to a different file.-->
    <Style x:Key="TypedValueStyle" TargetType="{x:Type ContentControl}">
      <Setter Property="Width" Value="200" />
      <Setter Property="ContentTemplate">
        <Setter.Value>
          <DataTemplate>
            <TextBox Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, 
                            Path=DataContext.Value, Mode=TwoWay}"
                     IsReadOnly="true" Background="LightGray"/>
          </DataTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <DataTrigger Binding="{Binding Converter={StaticResource TypeOfConverter},Path=Value}"
                     Value="Int32">
          <Setter Property="ContentTemplate">
            <Setter.Value>
              <DataTemplate>
                <xctk:IntegerUpDown Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, 
                                Path=DataContext.Value, Mode=TwoWay}" />
              </DataTemplate>
            </Setter.Value>
          </Setter>
        </DataTrigger>
        <DataTrigger Binding="{Binding Converter={StaticResource TypeOfConverter},Path=Value}" 
                     Value="String">
          <Setter Property="ContentTemplate">
            <Setter.Value>
              <DataTemplate>
                <TextBox Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, 
                                Path=DataContext.Value, Mode=TwoWay}"/>
              </DataTemplate>
            </Setter.Value>
          </Setter>
        </DataTrigger>
        <DataTrigger Binding="{Binding Converter={StaticResource TypeOfConverter},Path=Value}" 
                     Value="DateTime">
          <Setter Property="ContentTemplate">
            <Setter.Value>
              <DataTemplate>
                <DatePicker SelectedDate="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, 
                                          Path=DataContext.Value, Mode=TwoWay}"
                            HorizontalAlignment="Stretch" />
              </DataTemplate>
            </Setter.Value>
          </Setter>
        </DataTrigger>
        <DataTrigger Binding="{Binding Converter={StaticResource TypeOfConverter},Path=Value}" 
                     Value="Boolean">
          <Setter Property="ContentTemplate">
            <Setter.Value>
              <DataTemplate>
                <CheckBox IsChecked="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, 
                                          Path=DataContext.Value, Mode=TwoWay}" />
              </DataTemplate>
            </Setter.Value>
          </Setter>
        </DataTrigger>
        <DataTrigger Binding="{Binding Converter={StaticResource TypeOfConverter},Path=Value}" 
                     Value="Decimal">
          <Setter Property="ContentTemplate">
            <Setter.Value>
              <DataTemplate>
                <xctk:DecimalUpDown Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, 
                                          Path=DataContext.Value, Mode=TwoWay}" />
              </DataTemplate>
            </Setter.Value>
          </Setter>
        </DataTrigger>
        <DataTrigger Binding="{Binding Converter={StaticResource TypeOfConverter},Path=Value}" 
                     Value="Double">
          <Setter Property="ContentTemplate">
            <Setter.Value>
              <DataTemplate>
                <xctk:DoubleUpDown Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentControl}}, 
                                          Path=DataContext.Value, Mode=TwoWay}" />
              </DataTemplate>
            </Setter.Value>
          </Setter>
        </DataTrigger>        
      </Style.Triggers>
    </Style>
  </UserControl.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="80*"/>
      <RowDefinition Height="20*"/>
    </Grid.RowDefinitions>
    <ListView Name="LvPluginSettings" 
              ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:PluginSettingsEditor}}, 
                            Path=PluginSettings, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
              Grid.Row="0">      
      <ListView.View>
        <GridView>
          <GridViewColumn Header="Name" Width="100">
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <Label Content="{Binding Path=PropertyName}"/>
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
          <GridViewColumn Header="Value" 
                          Width="Auto">
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <ContentControl DataContext="{Binding}" 
                                Content="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                Style="{StaticResource TypedValueStyle}" />
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
        </GridView>
      </ListView.View>
    </ListView>
    <TextBlock Name="TbDescription" 
               Text="{Binding SelectedItem.SettingAttribute.Description, ElementName=LvPluginSettings}"
               Grid.Row="1" 
               HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
               Background="LightGray"/>
  </Grid>
</UserControl>
